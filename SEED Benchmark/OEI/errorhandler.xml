<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
      xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd">
  <vm:connector doc:name="VM" name="Queue" queueTimeout="120000" validateConnections="true"/>
  <flow name="ErrorHandler">
    <expression-filter doc:name="Expression" expression="${sendErrorEmail} == 'true'"/>
    <set-payload doc:description="Set the payload to the exception details for processing"
                 doc:name="Set Payload: capture exception" value="#[flowVars.ErrorLog]"/>
    <logger doc:description="Log the details" doc:name="Logger: Capture payload" level="INFO"
            message="Current Payload: #[payload]"/>
    <choice doc:name="Choice">
      <when expression="#[${email.secure} == 'true']">
        <smtps:outbound-endpoint
        doc:description="Mail the exception which has been caught and logged to a configured recipient"
        doc:name="SMTP: Outbound email exception" from="${email.sender}" host="${email.host}"
        password="${email.password}" port="${email.port}" responseTimeout="10000" subject="${email.subject}"
        to="${email.recipient}, ${email.internal}" user="${email.user}"/>
      </when>
      <otherwise>
        <smtp:outbound-endpoint doc:name="SMTP" from="${email.sender}" host="${email.host}" password="${email.password}"
                                port="${email.port}" responseTimeout="10000" subject="${email.subject}"
                                to="${email.recipient}, ${email.internal}" user="${email.user}"/>
      </otherwise>
    </choice>
  </flow>
</mule>
